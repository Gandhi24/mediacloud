- name: Include variables
  include_vars: ../vars/main-{{ ansible_distribution }}.yml
  tags:
    - apache2-fcgi

- name: Include tasks
  include_tasks: main-{{ ansible_distribution }}.yml
  tags:
    - apache2-fcgi

- name: Test if Apache configuration directory exists
  stat:
    path: "{{ apache2_conf_path }}"
  register: apache2_conf_path_stat
  tags:
    - apache2-fcgi

- name: Ensure that Apache configuration directory exists
  assert:
    that:
      - "apache2_conf_path_stat.stat.isdir is defined and apache2_conf_path_stat.stat.isdir"
  tags:
    - apache2-fcgi

- name: Test if Apache main configuration file exists
  stat:
    path: "{{ apache2_conf_httpd_conf_path }}"
  register: apache2_conf_httpd_conf_path_stat
  tags:
    - apache2-fcgi

- name: Ensure that Apache main configuration file exists
  assert:
    that:
      - "apache2_conf_httpd_conf_path_stat.stat.exists is defined and apache2_conf_httpd_conf_path_stat.stat.exists"
  tags:
    - apache2-fcgi

- name: Test if SSL certificate exists
  stat:
    path: "{{ apache2_ssl_cert_path }}"
  register: apache2_ssl_cert_path_stat
  when: apache2_ssl_enabled
  become: false # should be world-readable
  tags:
    - apache2-fcgi

- name: Ensure that SSL certificate exists
  assert:
    that:
      - "apache2_ssl_cert_path_stat.stat.exists is defined and apache2_ssl_cert_path_stat.stat.exists"
  when: apache2_ssl_enabled
  become: false # should be world-readable
  tags:
    - apache2-fcgi

- name: Test if SSL intermediate certificate exists
  stat:
    path: "{{ apache2_ssl_cert_chain_path }}"
  register: apache2_ssl_cert_chain_path_stat
  when: apache2_ssl_enabled and apache2_ssl_cert_chain_path is defined
  become: false # should be world-readable
  tags:
    - apache2-fcgi

- name: Ensure that SSL intermediate certificate exists
  assert:
    that:
      - "apache2_ssl_cert_chain_path_stat.stat.exists is defined and apache2_ssl_cert_chain_path_stat.stat.exists"
  when: apache2_ssl_enabled and apache2_ssl_cert_chain_path is defined
  become: false # should be world-readable
  tags:
    - apache2-fcgi

- name: Test if SSL private key exists
  stat:
    path: "{{ apache2_ssl_cert_key_path }}"
  register: apache2_ssl_cert_key_path_stat
  when: apache2_ssl_enabled
  become: "{{ apache2_conf_become }}" # should be Apache-readable
  tags:
    - apache2-fcgi

- name: Ensure that SSL private key exists
  assert:
    that:
      - "apache2_ssl_cert_key_path_stat.stat.exists is defined and apache2_ssl_cert_key_path_stat.stat.exists"
  when: apache2_ssl_enabled
  become: "{{ apache2_conf_become }}" # should be Apache-readable
  tags:
    - apache2-fcgi

- name: Create conf, mods, sites directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ apache2_conf_path }}/mods-available/"
    - "{{ apache2_conf_path }}/mods-enabled/"
    - "{{ apache2_conf_path }}/conf-available/"
    - "{{ apache2_conf_path }}/conf-enabled/"
    - "{{ apache2_conf_path }}/sites-available/"
    - "{{ apache2_conf_path }}/sites-enabled/"
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add mods-enabled/*.load to Apache main configuration file
  lineinfile:
    dest: "{{ apache2_conf_httpd_conf_path }}"
    regexp: "^IncludeOptional.+?mods-enabled/\\*\\.load$"
    line: "IncludeOptional {{ apache2_conf_path }}/mods-enabled/*.load"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add mods-enabled/*.conf to Apache main configuration file
  lineinfile:
    dest: "{{ apache2_conf_httpd_conf_path }}"
    regexp: "^IncludeOptional.+?mods-enabled/\\*\\.conf$"
    line: "IncludeOptional {{ apache2_conf_path }}/mods-enabled/*.conf"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add conf-enabled/*.conf to Apache main configuration file
  lineinfile:
    dest: "{{ apache2_conf_httpd_conf_path }}"
    regexp: "^IncludeOptional.+?conf-enabled/\\*\\.conf$"
    line: "IncludeOptional {{ apache2_conf_path }}/conf-enabled/*.conf"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add sites-enabled/*.conf to Apache main configuration file
  lineinfile:
    dest: "{{ apache2_conf_httpd_conf_path }}"
    regexp: "^IncludeOptional.+?sites-enabled/\\*\\.conf$"
    line: "IncludeOptional {{ apache2_conf_path }}/sites-enabled/*.conf"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add LoadModule to alias.load  # OS X
  lineinfile:
    dest: "{{ apache2_conf_path }}/mods-available/alias.load"
    regexp: "^LoadModule\\s+alias_module\\s+.+?$"
    line: "LoadModule alias_module {{ apache2_modules_path }}/mod_alias.so"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add LoadModule to env.load  # OS X
  lineinfile:
    dest: "{{ apache2_conf_path }}/mods-available/env.load"
    regexp: "^LoadModule\\s+env_module\\s+.+?$"
    line: "LoadModule env_module {{ apache2_modules_path }}/mod_env.so"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add LoadModule to fcgid.load  # OS X
  lineinfile:
    dest: "{{ apache2_conf_path }}/mods-available/fcgid.load"
    regexp: "^LoadModule\\s+fcgid_module\\s+.+?$"
    line: "LoadModule fcgid_module {{ apache2_mod_fcgid_path }}"  # installed on OS X as a separate package
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add LoadModule to headers.load  # OS X
  lineinfile:
    dest: "{{ apache2_conf_path }}/mods-available/headers.load"
    regexp: "^LoadModule\\s+headers_module\\s+.+?$"
    line: "LoadModule headers_module {{ apache2_modules_path }}/mod_headers.so"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add LoadModule to mime.load  # OS X
  lineinfile:
    dest: "{{ apache2_conf_path }}/mods-available/mime.load"
    regexp: "^LoadModule\\s+mime_module\\s+.+?$"
    line: "LoadModule mime_module {{ apache2_modules_path }}/mod_mime.so"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add LoadModule to rewrite.load  # OS X
  lineinfile:
    dest: "{{ apache2_conf_path }}/mods-available/rewrite.load"
    regexp: "^LoadModule\\s+rewrite_module\\s+.+?$"
    line: "LoadModule rewrite_module {{ apache2_modules_path }}/mod_rewrite.so"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  tags:
    - apache2-fcgi

- name: Add LoadModule to ssl.load  # OS X
  lineinfile:
    dest: "{{ apache2_conf_path }}/mods-available/ssl.load"
    regexp: "^LoadModule\\s+ssl_module\\s+.+?$"
    line: "LoadModule ssl_module {{ apache2_modules_path }}/mod_ssl.so"
    create: true  # might not exist on OS X
    state: present
  become: "{{ apache2_conf_become }}"
  become_user: root
  when: apache2_ssl_enabled
  tags:
    - apache2-fcgi

- name: Enable required Apache modules  # don't use a2enmod because it's not available on OS X
  file:
    src: "{{ apache2_conf_path }}/mods-available/{{ item }}.load"
    dest: "{{ apache2_conf_path }}/mods-enabled/{{ item }}.load"
    state: link
  with_items:
    - alias
    - env
    - fcgid
    - headers
    - mime
    - rewrite
  become: "{{ apache2_conf_become }}"
  become_user: root
  notify:
    - "restart apache"
  tags:
    - apache2-fcgi

- name: Enable mod_ssl Apache module
  file:
    src: "{{ apache2_conf_path }}/mods-available/ssl.load"
    dest: "{{ apache2_conf_path }}/mods-enabled/ssl.load"
    state: link
  become: "{{ apache2_conf_become }}"
  become_user: root
  when: apache2_ssl_enabled
  notify:
    - "restart apache"
  tags:
    - apache2-fcgi

- name: Disable default site
  file:
    path: "{{ apache2_conf_path }}/sites-enabled/000-default.conf"
    state: absent
  become: "{{ apache2_conf_become }}"
  become_user: root
  notify:
    - "restart apache"
  tags:
    - apache2-fcgi

- name: Copy Apache Media Cloud site configuration
  template:
    src: templates/001-mediacloud.conf.j2
    dest: "{{ apache2_conf_path }}/sites-available/001-mediacloud.conf"
  become: "{{ apache2_conf_become }}"
  become_user: root
  notify:
    - "restart apache"
  tags:
    - apache2-fcgi

- name: Enable Apache Media Cloud site configuration  # don't use a2ensite because it's not available on OS X
  file:
    src: "{{ apache2_conf_path }}/sites-available/001-mediacloud.conf"
    dest: "{{ apache2_conf_path }}/sites-enabled/001-mediacloud.conf"
    state: link
  become: "{{ apache2_conf_become }}"
  become_user: root
  notify:
    - "restart apache"
  tags:
    - apache2-fcgi
